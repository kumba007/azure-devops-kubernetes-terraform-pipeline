trigger:
- main

resources:
- repo: self

variables:
  tag: 40
  #tag: '$(Build.BuildId)'

stages:
  - stage: Build
    displayName: Build image
    jobs:  
    - job: Build
      displayName: Build
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - bash: echo hello 
      # - task: Docker@2
      #   displayName: Build an image
      #   inputs:
      #     containerRegistry: 'Docker Registory'
      #     repository: 'kumba/currency-exchange-devops'
      #     command: 'buildAndPush'
      #     Dockerfile: '**/Dockerfile'
      #     tags: '$(tag)'
    - job: Store_Artifact
      displayName: Copy and publish Artifacts
      steps: 
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(System.DefaultWorkingDirectory)'
            Contents: '**/*.*'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'
        - bash: echo $(System.DefaultWorkingDirectory)
        - bash: echo $(Build.ArtifactStagingDirectory)
        - bash: ls -ltr $(Build.ArtifactStagingDirectory)
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'Build_artifact'
            publishLocation: 'Container'
  - stage: Deploy
    jobs:
      - job: Deploy
        displayName: Deploy Image
        pool:
          vmImage: 'ubuntu-latest'
        steps:
        - bash: ls -ltr -R $(System.DefaultWorkingDirectory)
        - bash: ls -ltr -R $(System.ArtifactsDirectory)
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'Build_artifact'
            itemPattern: '**/*.yaml'
            targetPath: '$(System.ArtifactsDirectory)'
        - task: KubernetesManifest@0
          inputs:
            action: 'deploy'
            kubernetesServiceConnection: 'My_AKS_Kubernetes_Connection'
            namespace: 'default'
            manifests: '$(System.ArtifactsDirectory)/deployment.yaml'
            containers: 'kumba/currency-exchange-devops:$(tag)'