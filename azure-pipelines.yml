# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master
pool:
  vmImage: 'ubuntu-latest'


stages: 
- stage: Terraform_Init 
  jobs:  
    - job: Initializie_resources
      steps:
      - bash : echo Welcome to AKS - Terraform
      - task: DownloadSecureFile@1
        name: publickey
        inputs:
          secureFile: 'azure_rsa.pub'
      - task: TerraformCLI@0
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
          commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
          backendType: 'azurerm'
          backendServiceArm: 'azure_resource_manager_service_connection'
          ensureBackend: true
          backendAzureRmResourceGroupName: 'terraform-resource-gp'
          backendAzureRmResourceGroupLocation: 'westeurope'
          backendAzureRmStorageAccountName: 'terrastorageaccountkumba'
          backendAzureRmContainerName: 'terrastorageaccountkumba'
          backendAzureRmKey: 'kubernetes-dev.tfstate'
          allowTelemetryCollection: true

      
      - task: TerraformCLI@0
        inputs:
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
          environmentServiceName: 'azure_resource_manager_service_connection'
          commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
          allowTelemetryCollection: true
     
- stage: Terraform_Apply
  jobs:
    - job: 
      steps:
      - bash: echo "Welcome to stage 2 to perform terraform Apply"
 
